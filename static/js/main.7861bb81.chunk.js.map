{"version":3,"sources":["assets/noPosterSmall.png","Constants.js","Components/Welcome.js","Components/Section.js","Components/Loader.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Movie/MoviePresenter.js","Routes/Movie/index.js","Routes/Movie/MovieContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Components/Footer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Videos.js","Routes/Detail/DetailPresenter.js","Routes/Detail/DetailContainer.js","Routes/Detail/index.js","Routes/Terms/TermsPresenter.js","Routes/Terms/index.js","Routes/Terms/TermsContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SERVICE_NAME_EN","CONST_WELCOME","CONST_LOREM_IPSUM","Welcome","react_default","a","createElement","Alert_default","variant","Heading","Component","Container","styled","div","_templateObject","Title","span","_templateObject2","Grid","_templateObject3","Section","_ref","title","children","Loader","Fragment","Helmet_default","Container_default","Row_default","className","Col_default","Spinner_default","animation","role","Poster_templateObject","Image","Poster_templateObject2","props","bgUrl","Rating","Poster_templateObject3","ImageContainer","_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","react_router_dom","to","concat","Poster_Container","require","aria-label","Poster_Title","length","substring","CONST_SERVICE_NAME","Constants","CONST_NOW_PLAYING","CONST_UPCOMING_MOVIE","CONST_POPULAR_MOVIES","HomePresenter","nowPlaying","popular","upcoming","loading","error","Welcome_Welcome","Components_Section","map","movie","Components_Poster","key","poster_path","original_title","vote_average","release_date","CONST_LANGUAGE","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","_this$state","Home_HomePresenter","React","CONST_MOVIE","MoviePresenter","MovieContainer","Movie_MoviePresenter","CONST_TV","CONST_TOP_RATED_SHOWS","CONST_POPULAR_SHOWS","CONST_AIRING_TODAY","TVPresenter","show","original_name","first_air_date","TVContainer","TV_TVPresenter","Header","header","Header_templateObject","CONST_SEARCH","withRouter","location","pathname","Navbar_default","bg","collapseOnSelect","expand","fixed","Brand","Toggle","aria-controls","Collapse","Nav_default","Text","Footer","footer","Footer_templateObject","CONST_TERMS","CONST_FAMILY_SITE","CONST_RELATED_SITE","NavDropdown_default","drop","Item","href","target","CONST_SEARCH_MOVIES_OR_TV_SHOWS","CONST_NOTHING_FOUND","CONST_MOVIE_RESULT","CONST_TV_RESULT","Input","input","SearchPresenter_templateObject","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","Form_default","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","_this","searchByTerm","_callee","_ref2","_ref3","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","Videos_templateObject","VideoContainer","Videos_templateObject2","Video","iframe","Videos_templateObject3","h4","Videos_templateObject4","Videos","videos","Videos_Container","Videos_Title","video","index","src","controls","frameborder","allowfullscreen","Backdrop","DetailPresenter_templateObject","bgImage","Data","DetailPresenter_templateObject2","h3","DetailPresenter_templateObject3","ItemContainer","DetailPresenter_templateObject4","DetailPresenter_templateObject5","Divider","DetailPresenter_templateObject6","Overview","_templateObject7","DetailPresenter","result","backdrop_path","md","Image_default","fluid","rounded","DetailPresenter_Title","runtime","episode_run_time","genres","genre","name","overview","Components_Videos","DetailContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","match","push","history","parsedId","parseInt","isNaN","Detail_DetailPresenter","TermsPresenter","TermsContainer","Terms_TermsPresenter","Router","Components_Header","react_router","path","exact","component","Home","Movie","Detail","TV","Search","Terms","from","Components_Footer","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","Components_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7861bb81.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","// KO : Korean, EN: English\nexport const LANGUAGE = 'KO';\n\nexport const COPYRIGHT = '© 2019 coolitea';\nexport const SERVICE_NAME_EN = 'e-Government Service';\nexport const COMPANY_NAME_EN = 'coolitea';\nexport const WELCOME_EN = 'Welcome to the e-Government Service!';\nexport const MOVIE_EN = 'Movie';\nexport const TV_EN = 'TV';\nexport const SEARCH_EN = 'Search';\nexport const SAMPLE_EN = 'Sample';\nexport const TERMS_EN = 'Terms';\nexport const FAMILY_SITE_EN = 'Family Sites';\nexport const RELATED_SITE_EN = 'Related Sites';\nexport const LOADING_EN = 'Loading';\nexport const NOW_PLAYING_EN = 'Now Playing';\nexport const UPCOMING_MOVIE_EN = 'Upcoming Movies';\nexport const POPULAR_MOVIES_EN = 'Popular Movies';\nexport const PRIVACY_POLICY_EN = 'Privacy Policy';\nexport const TOP_RATED_SHOWS_EN = 'Top Rated Shows';\nexport const POPULAR_SHOWS_EN = 'Popular Shows';\nexport const AIRING_TODAY_EN = 'Airing Today';\nexport const SEARCH_MOVIES_OR_TV_SHOWS_EN = 'Search Movies or TV Shows...';\nexport const NOTHING_FOUND_EN = 'Nothing found';\nexport const MOVIE_RESULT_EN = 'Movie Results';\nexport const TV_RESULT_EN = 'TV Show Results';\nexport const LOREM_IPSUM_EN =\n  \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\";\n\nexport const SERVICE_NAME_KO = '전자정부서비스';\nexport const COMPANY_NAME_KO = 'coolitea';\nexport const WELCOME_KO = '안녕하세요! 전자정부서비스입니다.';\nexport const MOVIE_KO = '영화';\nexport const TV_KO = 'TV';\nexport const SEARCH_KO = '검색';\nexport const SAMPLE_KO = '샘플';\nexport const NOW_PLAYING_KO = '현재 상영작';\nexport const UPCOMING_MOVIE_KO = '상영 예정작';\nexport const POPULAR_MOVIES_KO = '인기 영화';\nexport const FAMILY_SITE_KO = '패밀리 사이트';\nexport const RELATED_SITE_KO = '관련 사이트';\nexport const TERMS_KO = '이용약관';\nexport const PRIVACY_POLICY_KO = '개인정보처리방침';\nexport const TOP_RATED_SHOWS_KO = '최고 평가 TV 프로그램';\nexport const POPULAR_SHOWS_KO = '인기 TV 프로그램';\nexport const AIRING_TODAY_KO = '오늘 상영작';\nexport const LOADING_KO = '로딩 중';\nexport const SEARCH_MOVIES_OR_TV_SHOWS_KO =\n  '영화나 TV 프로그램을 검색하세요...';\nexport const NOTHING_FOUND_KO = '검색된 결과가 없습니다.';\nexport const MOVIE_RESULT_KO = '영화 결과';\nexport const TV_RESULT_KO = 'TV 프로그램 결과';\nexport const LOREM_IPSUM_KO =\n  '우리는 편리하고 안전한 금융투자 인프라를 제공하여 자본시장 발전에 기여합니다.';\n","import React, { Component } from 'react';\nimport * as Constants from 'Constants';\nimport Alert from 'react-bootstrap/Alert';\n\nlet CONST_WELCOME = Constants.WELCOME_EN;\nlet CONST_LOREM_IPSUM = Constants.LOREM_IPSUM_EN;\n\nif (Constants.LANGUAGE === 'KO') {\n  CONST_WELCOME = Constants.WELCOME_KO;\n  CONST_LOREM_IPSUM = Constants.LOREM_IPSUM_KO;\n}\n\nexport default class Welcome extends Component {\n  render() {\n    return (\n      <Alert variant=\"success\">\n        <Alert.Heading>{CONST_WELCOME}</Alert.Heading>\n        <p>{CONST_LOREM_IPSUM}</p>\n      </Alert>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :first-child {\n    margin-top: 20px;\n  }\n\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Spinner from 'react-bootstrap/Spinner';\nimport * as Constants from 'Constants';\n\nexport default () => (\n  <>\n    <Helmet>\n      <title>\n        {Constants.LOADING_KO} | {Constants.SERVICE_NAME_KO}{' '}\n      </title>\n    </Helmet>\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col />\n        <Col>\n          <Spinner animation=\"grow\" role=\"status\" variant=\"success\">\n            <span className=\"sr-only\">{Constants.LOADING_KO} ...</span>\n          </Spinner>\n        </Col>\n        <Col />\n      </Row>\n    </Container>\n  </>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Welcome from \"Components/Welcome\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Alert from \"react-bootstrap/Alert\";\nimport * as Constants from \"Constants\";\n\nlet CONST_SERVICE_NAME = Constants.SERVICE_NAME_EN;\nlet CONST_NOW_PLAYING = Constants.NOW_PLAYING_EN;\nlet CONST_UPCOMING_MOVIE = Constants.UPCOMING_MOVIE_EN;\nlet CONST_POPULAR_MOVIES = Constants.POPULAR_MOVIES_EN;\n\nif (Constants.LANGUAGE === \"KO\") {\n  CONST_SERVICE_NAME = Constants.SERVICE_NAME_KO;\n  CONST_NOW_PLAYING = Constants.NOW_PLAYING_KO;\n  CONST_UPCOMING_MOVIE = Constants.UPCOMING_MOVIE_KO;\n  CONST_POPULAR_MOVIES = Constants.POPULAR_MOVIES_KO;\n}\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <>\n      <Helmet>\n        <title>{CONST_SERVICE_NAME}</title>\n      </Helmet>\n      <Container>\n        <Row>\n          <Col>\n            <Welcome />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            {nowPlaying && nowPlaying.length > 0 && (\n              <Section title={CONST_NOW_PLAYING}>\n                {nowPlaying.map(movie => (\n                  <Poster\n                    key={movie.id}\n                    id={movie.id}\n                    imageUrl={movie.poster_path}\n                    title={movie.original_title}\n                    rating={movie.vote_average}\n                    year={movie.release_date.substring(0, 4)}\n                    isMovie={true}\n                  />\n                ))}\n              </Section>\n            )}\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            {upcoming && upcoming.length > 0 && (\n              <Section title={CONST_UPCOMING_MOVIE}>\n                {upcoming.map(movie => (\n                  <Poster\n                    key={movie.id}\n                    id={movie.id}\n                    imageUrl={movie.poster_path}\n                    title={movie.original_title}\n                    rating={movie.vote_average}\n                    year={movie.release_date.substring(0, 4)}\n                    isMovie={true}\n                  />\n                ))}\n              </Section>\n            )}\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            {popular && popular.length > 0 && (\n              <Section title={CONST_POPULAR_MOVIES}>\n                {popular.map(movie => (\n                  <Poster\n                    key={movie.id}\n                    id={movie.id}\n                    imageUrl={movie.poster_path}\n                    title={movie.original_title}\n                    rating={movie.vote_average}\n                    year={movie.release_date.substring(0, 4)}\n                    isMovie={true}\n                  />\n                ))}\n              </Section>\n            )}\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>{error && <Alert variant=\"danger\">{error}</Alert>}</Col>\n        </Row>\n      </Container>\n    </>\n  );\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\nimport * as Constants from \"Constants\";\n\nlet CONST_LANGUAGE = \"us-EN\";\nif (Constants.LANGUAGE === \"KO\") {\n  CONST_LANGUAGE = \"ko-KR\";\n}\n\n/* API Overview\n * https://www.themoviedb.org/documentation/api\n * https://developers.themoviedb.org/3\n */\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"10923b261ba94d897ac6b81148314a3f\",\n    language: CONST_LANGUAGE\n  }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;\n","import React from 'react';\nimport HomePresenter from './HomePresenter';\nimport { moviesApi } from 'api';\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    popular: null,\n    upcoming: null,\n    loading: true,\n    error: null\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\"\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Poster from 'Components/Poster';\nimport Helmet from 'react-helmet';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\nimport * as Constants from 'Constants';\n\nlet CONST_SERVICE_NAME = Constants.SERVICE_NAME_EN;\nlet CONST_MOVIE = Constants.MOVIE_EN;\nlet CONST_NOW_PLAYING = Constants.NOW_PLAYING_EN;\nlet CONST_UPCOMING_MOVIE = Constants.UPCOMING_MOVIE_EN;\nlet CONST_POPULAR_MOVIES = Constants.POPULAR_MOVIES_EN;\n\nif (Constants.LANGUAGE === 'KO') {\n  CONST_SERVICE_NAME = Constants.SERVICE_NAME_KO;\n  CONST_MOVIE = Constants.MOVIE_KO;\n  CONST_NOW_PLAYING = Constants.NOW_PLAYING_KO;\n  CONST_UPCOMING_MOVIE = Constants.UPCOMING_MOVIE_KO;\n  CONST_POPULAR_MOVIES = Constants.POPULAR_MOVIES_KO;\n}\n\nconst MoviePresenter = ({ nowPlaying, popular, upcoming, loading, error }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <>\n      <Helmet>\n        <title>\n          {CONST_MOVIE} | {CONST_SERVICE_NAME}\n        </title>\n      </Helmet>\n      <Container>\n        <Row>\n          <Col>\n            {nowPlaying && nowPlaying.length > 0 && (\n              <Section title={CONST_NOW_PLAYING}>\n                {nowPlaying.map(movie => (\n                  <Poster\n                    key={movie.id}\n                    id={movie.id}\n                    imageUrl={movie.poster_path}\n                    title={movie.original_title}\n                    rating={movie.vote_average}\n                    year={movie.release_date.substring(0, 4)}\n                    isMovie={true}\n                  />\n                ))}\n              </Section>\n            )}\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            {upcoming && upcoming.length > 0 && (\n              <Section title={CONST_UPCOMING_MOVIE}>\n                {upcoming.map(movie => (\n                  <Poster\n                    key={movie.id}\n                    id={movie.id}\n                    imageUrl={movie.poster_path}\n                    title={movie.original_title}\n                    rating={movie.vote_average}\n                    year={movie.release_date.substring(0, 4)}\n                    isMovie={true}\n                  />\n                ))}\n              </Section>\n            )}\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            {popular && popular.length > 0 && (\n              <Section title={CONST_POPULAR_MOVIES}>\n                {popular.map(movie => (\n                  <Poster\n                    key={movie.id}\n                    id={movie.id}\n                    imageUrl={movie.poster_path}\n                    title={movie.original_title}\n                    rating={movie.vote_average}\n                    year={movie.release_date.substring(0, 4)}\n                    isMovie={true}\n                  />\n                ))}\n              </Section>\n            )}\n          </Col>\n        </Row>\n        <Row>\n          <Col>{error && <Alert variant=\"danger\">{error}</Alert>}</Col>\n        </Row>\n      </Container>\n    </>\n  );\n\nMoviePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default MoviePresenter;\n","import MovieContainer from './MovieContainer';\n\nexport default MovieContainer;\n","import React from 'react';\nimport MoviePresenter from './MoviePresenter';\nimport { moviesApi } from 'api';\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    popular: null,\n    upcoming: null,\n    loading: true,\n    error: null\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\"\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n\n    return (\n      <MoviePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Poster from 'Components/Poster';\nimport Helmet from 'react-helmet';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\nimport * as Constants from 'Constants';\n\nlet CONST_SERVICE_NAME = Constants.SERVICE_NAME_EN;\nlet CONST_TV = Constants.TV_EN;\nlet CONST_TOP_RATED_SHOWS = Constants.TOP_RATED_SHOWS_EN;\nlet CONST_POPULAR_SHOWS = Constants.POPULAR_SHOWS_EN;\nlet CONST_AIRING_TODAY = Constants.AIRING_TODAY_EN;\n\nif (Constants.LANGUAGE === 'KO') {\n  CONST_SERVICE_NAME = Constants.SERVICE_NAME_KO;\n  CONST_TV = Constants.TV_KO;\n  CONST_TOP_RATED_SHOWS = Constants.TOP_RATED_SHOWS_KO;\n  CONST_POPULAR_SHOWS = Constants.POPULAR_SHOWS_KO;\n  CONST_AIRING_TODAY = Constants.AIRING_TODAY_KO;\n}\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <>\n      <Helmet>\n        <title>\n          {CONST_TV} | {CONST_SERVICE_NAME}\n        </title>\n      </Helmet>\n      <Container>\n        <Row>\n          <Col>\n            {topRated && topRated.length > 0 && (\n              <Section title={CONST_TOP_RATED_SHOWS}>\n                {topRated.map(show => (\n                  <Poster\n                    key={show.id}\n                    id={show.id}\n                    imageUrl={show.poster_path}\n                    title={show.original_name}\n                    rating={show.vote_average}\n                    year={show.first_air_date.substring(0, 4)}\n                  />\n                ))}\n              </Section>\n            )}\n            {popular && popular.length > 0 && (\n              <Section title={CONST_POPULAR_SHOWS}>\n                {popular.map(show => (\n                  <Poster\n                    key={show.id}\n                    id={show.id}\n                    imageUrl={show.poster_path}\n                    title={show.original_name}\n                    rating={show.vote_average}\n                    year={show.first_air_date.substring(0, 4)}\n                  />\n                ))}\n              </Section>\n            )}\n            {airingToday && airingToday.length > 0 && (\n              <Section title={CONST_AIRING_TODAY}>\n                {airingToday.map(show => (\n                  <Poster\n                    key={show.id}\n                    id={show.id}\n                    imageUrl={show.poster_path}\n                    title={show.original_name}\n                    rating={show.vote_average}\n                    year={show.first_air_date.substring(0, 4)}\n                  />\n                ))}\n              </Section>\n            )}\n          </Col>\n        </Row>\n        <Row>\n          <Col>{error && <Alert variant=\"danger\">{error}</Alert>}</Col>\n        </Row>\n      </Container>\n    </>\n  );\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;\n","import TVContainer from './TVContainer';\n\nexport default TVContainer;\n","import React from 'react';\nimport TVPresenter from './TVPresenter';\nimport { tvApi } from 'api';\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\"\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n// import Form from \"react-bootstrap/Form\";\n// import FormControl from \"react-bootstrap/FormControl\";\n// import Button from \"react-bootstrap/Button\";\n// import NavDropdown from \"react-bootstrap/NavDropdown\";\nimport * as Constants from \"Constants\";\n\nconst Header = styled.header``;\n\nlet CONST_SERVICE_NAME = Constants.SERVICE_NAME_EN;\nlet CONST_MOVIE = Constants.MOVIE_EN;\nlet CONST_TV = Constants.TV_EN;\n// let CONST_SAMPLE = Constants.SAMPLE_EN;\nlet CONST_SEARCH = Constants.SEARCH_EN;\n\nif (Constants.LANGUAGE === \"KO\") {\n  CONST_SERVICE_NAME = Constants.SERVICE_NAME_KO;\n  CONST_MOVIE = Constants.MOVIE_KO;\n  CONST_TV = Constants.TV_KO;\n  // CONST_SAMPLE = Constants.SAMPLE_KO;\n  CONST_SEARCH = Constants.SEARCH_KO;\n}\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <Navbar bg=\"light\" variant=\"light\" collapseOnSelect expand=\"lg\" fixed=\"top\">\n      <Navbar.Brand to=\"/\">\n        <Link to=\"/\">{CONST_SERVICE_NAME}</Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav>\n          <Navbar.Text>\n            <Link to=\"/movie\">{CONST_MOVIE}</Link>\n          </Navbar.Text>\n          {}\n          <Navbar.Text>\n            <Link to=\"/tv\">{CONST_TV}</Link>\n          </Navbar.Text>\n          <Navbar.Text variant=\"light\">\n            <Link to=\"/search\">{CONST_SEARCH}</Link>\n          </Navbar.Text>\n          {/* \n          <NavDropdown title={CONST_SAMPLE} id=\"collasible-nav-dropdown\">\n            <NavDropdown.Item>\n              <Link to=\"/sample/1-1\">{CONST_SAMPLE} 1-1</Link>\n            </NavDropdown.Item>\n            <NavDropdown.Item>\n              <Link to=\"/sample/1-2\">{CONST_SAMPLE} 1-2 </Link>\n            </NavDropdown.Item>\n            <NavDropdown.Item>\n              <Link to=\"/sample/1-3\">{CONST_SAMPLE} 1-3</Link>\n            </NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item>\n              <Link to=\"/sample/2\">{CONST_SAMPLE} 2</Link>\n            </NavDropdown.Item>\n          </NavDropdown> */}\n        </Nav>\n        {/* <Nav className=\"justify-content-end\" activeKey=\"/home\">\n          <Form inline>\n            <FormControl\n              type=\"text\"\n              placeholder={CONST_SEARCH}\n              className=\"mr-sm-2\"\n            />\n            <Button variant=\"outline-light\">{CONST_SEARCH}</Button>\n          </Form>\n        </Nav> */}\n      </Navbar.Collapse>\n    </Navbar>\n  </Header>\n));\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport * as Constants from \"Constants\";\n\nconst Footer = styled.footer``;\n\nlet COPYRIGHT = Constants.COPYRIGHT;\nlet CONST_TERMS = Constants.TERMS_EN;\nlet CONST_FAMILY_SITE = Constants.FAMILY_SITE_EN;\nlet CONST_RELATED_SITE = Constants.RELATED_SITE_EN;\n\nif (Constants.LANGUAGE === \"KO\") {\n  CONST_TERMS = Constants.TERMS_KO;\n  CONST_FAMILY_SITE = Constants.FAMILY_SITE_KO;\n  CONST_RELATED_SITE = Constants.RELATED_SITE_KO;\n}\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Footer>\n    <Navbar\n      className=\"bg-dark justify-content-center\"\n      collapseOnSelect\n      expand=\"lg\"\n      variant=\"dark\"\n      fixed=\"bottom\"\n    >\n      <Navbar.Brand> {COPYRIGHT} </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Navbar.Text>\n          <Link to=\"/terms\">{CONST_TERMS}</Link>\n        </Navbar.Text>\n        <Nav className=\"mr-auto\">\n          <NavDropdown\n            title={CONST_FAMILY_SITE}\n            id=\"collasible-nav-dropdown\"\n            drop=\"up\"\n          >\n            <NavDropdown.Item href=\"http://www.ksd.or.kr\" target=\"_blank\">\n              KSD\n            </NavDropdown.Item>\n            <NavDropdown.Item href=\"https://evote.ksd.or.kr\" target=\"_blank\">\n              K-eVote\n            </NavDropdown.Item>\n            <NavDropdown.Item href=\"http://www.seibro.or.kr\" target=\"_blank\">\n              Seibro\n            </NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n        <Nav className=\"mr-auto\">\n          <NavDropdown\n            title={CONST_RELATED_SITE}\n            id=\"collasible-nav-dropdown\"\n            drop=\"up\"\n          >\n            <NavDropdown.Item href=\"http://www.fsc.go.kr/\" target=\"_blank\">\n              금융위원회(FSC)\n            </NavDropdown.Item>\n            <NavDropdown.Item href=\"http://dart.fss.or.kr/\" target=\"_blank\">\n              전자공시시스템(Dart)\n            </NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  </Footer>\n));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from 'Components/Loader';\nimport Section from 'Components/Section';\nimport Poster from 'Components/Poster';\nimport Helmet from 'react-helmet';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport * as Constants from 'Constants';\n\nlet CONST_SERVICE_NAME = Constants.SERVICE_NAME_EN;\nlet CONST_SEARCH = Constants.SEARCH_EN;\nlet CONST_SEARCH_MOVIES_OR_TV_SHOWS = Constants.SEARCH_MOVIES_OR_TV_SHOWS_EN;\nlet CONST_NOTHING_FOUND = Constants.NOTHING_FOUND_EN;\nlet CONST_MOVIE_RESULT = Constants.MOVIE_RESULT_EN;\nlet CONST_TV_RESULT = Constants.TV_RESULT_EN;\n\nif (Constants.LANGUAGE === 'KO') {\n  CONST_SERVICE_NAME = Constants.SERVICE_NAME_KO;\n  CONST_SEARCH = Constants.SEARCH_KO;\n  CONST_SEARCH_MOVIES_OR_TV_SHOWS = Constants.SEARCH_MOVIES_OR_TV_SHOWS_KO;\n  CONST_NOTHING_FOUND = Constants.NOTHING_FOUND_KO;\n  CONST_MOVIE_RESULT = Constants.MOVIE_RESULT_KO;\n  CONST_TV_RESULT = Constants.TV_RESULT_KO;\n}\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm\n}) => (\n  <>\n    <Helmet>\n      <title>\n        {CONST_SEARCH} | {CONST_SERVICE_NAME}\n      </title>\n    </Helmet>\n    <Container>\n      <Row>\n        <Col>\n          <Form onSubmit={handleSubmit}>\n            <Input\n              placeholder={CONST_SEARCH_MOVIES_OR_TV_SHOWS}\n              value={searchTerm}\n              onChange={updateTerm}\n            />\n          </Form>\n          {loading ? (\n            <Loader />\n          ) : (\n            <>\n              {movieResults && movieResults.length > 0 && (\n                <Section title={CONST_MOVIE_RESULT}>\n                  {movieResults.map(movie => (\n                    <Poster\n                      key={movie.id}\n                      id={movie.id}\n                      imageUrl={movie.poster_path}\n                      title={movie.original_title}\n                      rating={movie.vote_average}\n                      year={movie.release_date.substring(0, 4)}\n                      isMovie={true}\n                    />\n                  ))}\n                </Section>\n              )}\n              {tvResults && tvResults.length > 0 && (\n                <Section title={CONST_TV_RESULT}>\n                  {tvResults.map(show => (\n                    <Poster\n                      key={show.id}\n                      id={show.id}\n                      imageUrl={show.poster_path}\n                      title={show.original_name}\n                      rating={show.vote_average}\n                      year={show.first_air_date.substring(0, 4)}\n                    />\n                  ))}\n                </Section>\n              )}\n              {error && <Alert variant=\"danger\">{error}</Alert>}\n              {tvResults &&\n                movieResults &&\n                tvResults.length === 0 &&\n                movieResults.length === 0 && (\n                  <Alert variant=\"danger\">{CONST_NOTHING_FOUND}</Alert>\n                )}\n            </>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  </>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;\n","import React from 'react';\nimport SearchPresenter from './SearchPresenter';\nimport { moviesApi, tvApi } from 'api';\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: '',\n    error: null,\n    loading: false\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== '') {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n`;\n\nconst VideoContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 320px);\n  grid-gap: 10px;\n  margin-bottom: 20px;\n`;\n\nconst Video = styled.iframe`\n  height: 200px;\n  width: 320px;\n`;\n\nconst Title = styled.h4`\n  width: 100%;\n  font-size: 20px;\n  font-weight: 300;\n  margin: 20px 0;\n`;\n\nconst Videos = ({ videos }) => (\n  <Container>\n    <Title>Teasers</Title>\n\n    <VideoContainer>\n      {videos.length > 0 &&\n        videos.map((video, index) => {\n          if (index < 2) {\n            return (\n              <Video\n                key={index}\n                src={`https://www.youtube.com/embed/${video.key}`}\n                controls\n                frameborder=\"0\"\n                allowfullscreen\n              />\n            );\n          } else {\n            return null;\n          }\n        })}\n    </VideoContainer>\n  </Container>\n);\n\nexport default Videos;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Loader from 'Components/Loader';\nimport Videos from 'Components/Videos';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport * as Constants from 'Constants';\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Data = styled.div`\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{' '}\n          | {Constants.SERVICE_NAME_KO}\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Container>\n        <Row>\n          <Col md={3}>\n            <Image\n              src={\n                result.poster_path\n                  ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                  : require('../../assets/noPosterSmall.png')\n              }\n              fluid\n              rounded\n            />\n          </Col>\n          <Col md={9}>\n            <Data>\n              <Title>\n                {result.original_title\n                  ? result.original_title\n                  : result.original_name}\n              </Title>\n              <ItemContainer>\n                <Item>\n                  {result.release_date\n                    ? result.release_date.substring(0, 4)\n                    : result.first_air_date.substring(0, 4)}\n                </Item>\n                <Divider>•</Divider>\n                <Item>\n                  {result.runtime ? result.runtime : result.episode_run_time[0]}{' '}\n                  min\n                </Item>\n                <Divider>•</Divider>\n                <Item>\n                  {result.genres &&\n                    result.genres.map((genre, index) =>\n                      index === result.genres.length - 1\n                        ? genre.name\n                        : `${genre.name} / `\n                    )}\n                </Item>\n              </ItemContainer>\n              <Overview>{result.overview}</Overview>\n              {result.videos && result.videos.results.length > 0 && (\n                <Videos videos={result.videos.results} />\n              )}\n            </Data>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"api\";\nimport * as Constants from \"Constants\";\n\nlet CONST_NOTHING_FOUND = Constants.NOTHING_FOUND_EN;\n\nif (Constants.LANGUAGE === \"KO\") {\n  CONST_NOTHING_FOUND = Constants.NOTHING_FOUND_KO;\n}\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: { CONST_NOTHING_FOUND } });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import DetailContainer from './DetailContainer';\n\nexport default DetailContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport Loader from 'Components/Loader';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\nimport * as Constants from 'Constants';\n\nlet CONST_TERMS = Constants.TERMS_EN;\nlet CONST_SERVICE_NAME = Constants.SERVICE_NAME_EN;\n\nif (Constants.LANGUAGE === 'KO') {\n  CONST_SERVICE_NAME = Constants.SERVICE_NAME_KO;\n  CONST_TERMS = Constants.TERMS_KO;\n}\n\nconst TermsPresenter = ({ loading, error }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <>\n      <Helmet>\n        <title>\n          {CONST_TERMS} | {CONST_SERVICE_NAME}\n        </title>\n      </Helmet>\n      <Container>\n        <Row>\n          <Col>\n            <h1>{CONST_TERMS}</h1>\n          </Col>\n        </Row>\n      </Container>\n\n      {error && <Alert variant=\"danger\">{error}</Alert>}\n    </>\n  );\n\nTermsPresenter.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TermsPresenter;\n","import TermsContainer from \"./TermsContainer\";\n\nexport default TermsContainer;\n","import React from \"react\";\nimport TermsPresenter from \"./TermsPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\"\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { error, loading } = this.state;\n\n    return <TermsPresenter error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport Movie from \"Routes/Movie\";\nimport TV from \"Routes/TV\";\nimport Header from \"Components/Header\";\nimport Footer from \"Components/Footer\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\nimport Terms from \"Routes/Terms\";\n\nexport default () => (\n  <Router>\n    <Header />\n    <main>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/movie\" exact component={Movie} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/terms\" component={Terms} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </main>\n    <Footer />\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        padding: 0 10px;\n        color:inherit;\n    }\n\n    a:hover {\n        text-decoration:none;                \n    } \n\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;        \n        padding:70px 0;        \n    }\n`;\n\nexport default globalStyles;\n","import React from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from 'Components/GlobalStyles';\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-bootstrap/dist/react-bootstrap.min.js\";\nimport App from \"Components/App\";\nimport \"react-app-polyfill/ie9\"; // For IE 9-11 support\nimport \"react-app-polyfill/ie11\"; // For IE 11 support\nimport * as serviceWorker from \"serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.register();\n"],"sourceRoot":""}